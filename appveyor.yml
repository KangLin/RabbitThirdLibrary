#TODO:版本变更时，修改成相应的版本
version: 'v0.0.3.{build}'

image: Visual Studio 2015


environment:
  TimeOutMins: 2
  
  matrix:
  ##### msvc 2017 ########
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 15
    RABBIT_ARCH: x64
    RABBIT_CONFIG: Release
    QT_ROOT: NO

  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 15
    RABBIT_ARCH: x64
    RABBIT_CONFIG: Debug
    QT_ROOT: NO

  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 15
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Release
    QT_ROOT: NO
    
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 15
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Debug
    QT_ROOT: NO
    
  ##### msvc 2015 ########
  - BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 14
    RABBIT_ARCH: x64
    RABBIT_CONFIG: Release
    QT_ROOT: NO
    
  - BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 14
    RABBIT_ARCH: x64
    RABBIT_CONFIG: Debug
    QT_ROOT: NO
  
  - BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 14
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Release
    QT_ROOT: NO
  
  - BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 14
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Debug
    QT_ROOT: NO
    
  ##### msvc 2013 ########
  - BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 12
    RABBIT_ARCH: x64
    RABBIT_CONFIG: Release
    QT_ROOT: NO

  - BUILD_TARGERT: windows_msvc
    RABBIT_TOOLCHAIN_VERSION: 12
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Release
    QT_ROOT: NO
  
  ##### mingw ########
  - BUILD_TARGERT: windows_mingw
    RABBIT_TOOLCHAIN_VERSION: 530
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Release
    QT_ROOT: NO
    
  - BUILD_TARGERT: windows_mingw
    RABBIT_TOOLCHAIN_VERSION: 530
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Debug
    QT_ROOT: NO

  - BUILD_TARGERT: windows_mingw
    RABBIT_TOOLCHAIN_VERSION: 492
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Release
    QT_ROOT: NO

  - BUILD_TARGERT: windows_mingw
    RABBIT_TOOLCHAIN_VERSION: 482
    RABBIT_ARCH: x86
    RABBIT_CONFIG: Release
    QT_ROOT: NO
    
init:
  - set RABBITIM_LIBRARY=change_prefix zlib minizip expat libgpx openssl libsodium boost libcurl libpng jpeg libgif libtiff freetype protobuf berkeleydb libevent libyuv libvpx libqrencode libopus x264 ffmpeg gdal
  - set varch=%RABBIT_ARCH%
  - set PROJECT_NAME=%APPVEYOR_PROJECT_NAME%
  - if "%QT_VERSION%" == "" set QT_VERSION=NO
  - set RABBIT_USE_REPOSITORIES="FALSE"
  - if "%RABBIT_ARCH%" == "x64" set varch=amd64
  - if "%BUILD_TARGERT%" == "windows_msvc" if %RABBIT_TOOLCHAIN_VERSION% LSS 15 (call "C:\Program Files (x86)\Microsoft Visual Studio %RABBIT_TOOLCHAIN_VERSION%.0\VC\vcvarsall.bat" %varch%) else (call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %varch%)
  - if "%BUILD_TARGERT%" == "windows_mingw" set MSYSTEM=MINGW32  #设置编译系统为MINGW32
  - if NOT "%QT_ROOT%" == "NO" for /f "delims=" %%i in ('%QT_ROOT%/bin/qmake -query QT_VERSION') do (set QT_VERSION=%%i)
  - echo QT_VERSION=%QT_VERSION%
  - echo QT_ROOT=%QT_ROOT%
  - del C:\msys64\usr\bin\link.exe
  
install:
  - for /f "delims=" %%i in ('git describe --tags') do (set BUILD_VERSION=%%i)
  - if "%BUILD_VERSION%" == "" for /f "delims=" %%i in ('git rev-parse HEAD') do (set BUILD_VERSION=%%i) 
  - echo BUILD_VERSION=%BUILD_VERSION%
  - if not "%BUILD_TARGERT%" == "android" C:\msys64\usr\bin\pacman.exe -S --noconfirm nasm yasm 
  - C:\msys64\usr\bin\pacman.exe -S --noconfirm unzip expect #zip curl
  - C:\msys64\autorebase.bat
  - ps: |
      write-host "Waiting for job `"$env:jobToWait`" to complete"
      
      $headers = @{
          "Content-type" = "application/json"
      }
  
      [datetime]$stop = ([datetime]::Now).AddMinutes($env:TimeOutMins)
      [bool]$success = $false  
      
      while(!$success -and ([datetime]::Now) -lt $stop) {
          $project = Invoke-RestMethod -Uri "https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG" -Headers $headers -Method GET
      
          $jobToWaitJson = $project.build.jobs | where {$_.name -eq $env:jobToWait}  
          $success = $jobToWaitJson.status -eq "success"
          $jobToWaitId = $jobToWaitJson.jobId;
          if (!$success) {Start-sleep 5}
      }
      
      if (!$success) {throw "Job `"$env:jobToWait`" was not finished in $env:TimeOutMins minutes"}
      if (!$jobToWaitId) {throw "Unable t get JobId for the job `"$env:jobToWait`""}
    
before_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%BUILD_TARGERT%" == "android" C:\msys64\usr\bin\bash.exe %APPVEYOR_BUILD_FOLDER%\build_script\ci\build-install-tools-windows.sh
  
build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - C:\msys64\usr\bin\bash.exe %APPVEYOR_BUILD_FOLDER%\build_script\ci\build.sh
  #- C:\msys64\usr\bin\bash.exe %APPVEYOR_BUILD_FOLDER%\build_script\ci\Deploy.sh

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%

artifacts:
  - path: $(BUILD_TARGERT)$(RABBIT_TOOLCHAIN_VERSION)_$(RABBIT_ARCH)_qt$(QT_VERSION)_$(RABBIT_CONFIG)
    name: RABBIT_$(BUILD_TARGERT)$(RABBIT_TOOLCHAIN_VERSION)_$(RABBIT_ARCH)_qt$(QT_VERSION)_$(RABBIT_CONFIG)_$(BUILD_VERSION)
    type: zip

test: off

#deploy:
  #http://www.appveyor.com/docs/deployment/ftp
#  provider: FTP
  #https://sourceforge.net/p/forge/documentation/SFTP/
#  protocol: sftp
#  host: frs.sourceforge.net
#  username: kl222,rabbitthirdlibrary
  #密码用这个加密 https://ci.appveyor.com/tools/encrypt
#  PASSWORD:
#    secure: 2WEtOQrdty3V3g0aEVvS3Q==
  #link pfs to  /home/frs/project/r/ra/rabbitthirdlibrary
#  folder: pfs/Release
#  active_mode: false


#See:https://www.appveyor.com/docs/deployment/github/
deploy:
  provider: GitHub
  #token 在这个地址产生 https://github.com/settings/tokens 用这个加密 https://ci.appveyor.com/tools/encrypt
  auth_token:
    secure: xgIFN2iAfgj1gsWabdHrmFXvj0rce/ZWtKUwm3aDUNfLGu+kO/q94MYD8a46AbDL
#  draft: false
#  prerelease: false
  on:
    appveyor_repo_tag: true        # deploy on tag push only
